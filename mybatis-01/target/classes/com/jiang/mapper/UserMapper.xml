<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace(命名空间)=绑定一个对应的Mapper接口-->
<mapper namespace="com.jiang.mapper.UserMapper">
<!--查询语句
id：绑定接口对应的方法
resultType：返回一条  resultType="返回类型"
resultMap：返回多条
-->
<!--    模糊查询-->
    <select id="getUserLike" resultType="com.com.jiang.pojo.User">
        select * from user where name like "%" #{value} "%"
    </select>

    <select id="getUserList" resultType="com.jiang.pojo.User">
        select * from user
    </select>

    <select id="getUserById" parameterType="int" resultType="com.com.jiang.pojo.User">
        select * from user where id= #{id}
    </select>

    <insert id="addUser" parameterType="com.com.jiang.pojo.User">
        insert into user (id,name,pwd) values (#{id},#{name},#{pwd})
    </insert>
<!--    传递map的key————(#{id},#{name},#{pwd})中id，name，pwd可以随意取名字，只需要在调用方法中对应取的名字就可以了-->
    <insert id="addUser2" parameterType="map">
        insert into user (name,pwd) values (#{name},#{password})
    </insert>
<!--正规修改信息-->
    <update id="updateUser" parameterType="com.com.jiang.pojo.User">
        update user
        set name=#{name},pwd=#{pwd}
        where id=#{id};
    </update>
<!--    map修改信息（多数在实际项目开发中，属于野路子）-->
    <update id="updateUser2" parameterType="map">
        update user
        set name = #{name}
        where id=#{id};
    </update>

<!--parameterType="int"返回类型是int可以不写-->
    <delete id="deleteUser" parameterType="int">
        delete
        from user
        where id=#{id};
    </delete>
</mapper>